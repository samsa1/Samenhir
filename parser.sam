
%{


%}

%token<usize> INT
%token LB
%token RB
%token ADD MUL
%token SEMICOLON
%token EOF
%token COMMA

%left ADD
%left MUL

%start file

%%

file<usize>:
	| expr COMMA file {0}
	| COMMA expr2 file {1}
	| EOF {2}
;

expr< usize >:
	| i = INT {i}
	| e1 = expr ADD e2 = expr {e1 + e2}
	| e1 = expr MUL e2 = expr {e1 * e2}
	| LB e = expr RB {e}
	| LB b = bloc {b}
;

expr2< usize >:
	| i = INT {i}
	| e1 = expr ADD e2 = expr2 {e1 + e2}
	| e1 = expr MUL e2 = expr2 { e1 * e2}
	| LB e = expr RB {e}
	| LB b = bloc {b}
;

bloc< usize >:
	| RB {(0)}
	| SEMICOLON b = bloc {b}
	| e = expr SEMICOLON b = bloc {1 + b}
;
