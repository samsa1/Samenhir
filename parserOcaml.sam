
%{


%}

%token<int> INT
%token LB
%token RB
%token ADD MUL
%token SEMICOLON
%token EOF
%token COMMA

%left ADD
%left MUL

%start file

%%

file< unit >:
	| expr COMMA file {()}
	| COMMA expr2 file {()}
	| EOF {()}
;

expr< unit >:
	| i = INT {()}
	| e1 = expr ADD e2 = expr {()}
	| e1 = expr MUL e2 = expr {()}
	| LB e = expr RB {()}
	| LB b = bloc {()}
;

expr2< unit >:
	| i = INT {()}
	| e1 = expr ADD e2 = expr2 {()}
	| e1 = expr MUL e2 = expr2 {()}
	| LB e = expr RB {()}
	| LB b = bloc {()}
;

bloc< int >:
	| RB {(0)}
	| SEMICOLON b = bloc {b}
	| e = expr SEMICOLON b = bloc {1 + b}
;
